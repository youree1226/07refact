<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	<resultMap id="purchaseSelectMap" type="purchase">
	
		<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="paymentOption" column="payment_option" jdbcType="CHAR"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/>
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
		<result property="tranCode" column="tran_status_code" jdbcType="CHAR"/>
		<result property="orderDate" column="order_date" jdbcType="DATE"/>
		<result property="divyDate" column="dlvy_date" jdbcType="VARCHAR"/>
		
		<association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
			<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
			<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
			<result property="price" column="price" jdbcType="NUMERIC"/>
			<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
			<result property="regDate" column="prod_reg_date" jdbcType="DATE"/>
			<result property="proTranCode" column="tran_status_code" jdbcType="CHAR"/>
		</association>
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
			<result property="userName" column="user_name" jdbcType="VARCHAR"/>
			<result property="password" column="password" jdbcType="VARCHAR"/>
			<result property="role" column="role" jdbcType="VARCHAR"/>
			<result property="ssn" column="ssn" jdbcType="VARCHAR"/>
			<result property="phone" column="cell_phone" jdbcType="VARCHAR"/>
			<result property="addr" column="addr" jdbcType="VARCHAR"/>
			<result property="email" column="email" jdbcType="VARCHAR"/>
			<result property="regDate" column="user_reg_date" jdbcType="DATE"/>
		</association>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
		INSERT INTO transaction 
		(tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, 
		tran_status_code, order_data, dlvy_date) 
		VALUES (seq_product_prod_no.nextval,#{purchaseProd.prodNo},#{buyer.userId},#{paymentOption:VARCHAR},
		#{receiverName:VARCHAR},#{receiverPhone:VARCHAR},#{divyAddr:VARCHAR},#{divyRequest:VARCHAR}, 
		1,SYSDATE,TO_DATE(#{divyDate:DATE},'YYYY-MM-DD'))
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="string"	resultMap="purchaseSelectMap">
		 SELECT t.tran_no, t.prod_no, t.buyer_id, t.payment_option, t.receiver_name, t.receiver_phone, t.demailaddr, t.dlvy_request, 
		t.tran_status_code, t.order_data, t.dlvy_date, p.prod_name, p.price
		 FROM transaction t, product p
		 WHERE t.prod_no = p.prod_no
		 AND t.tran_no = #{value}
	 </select>

	 <select 	id="getPurchase2"	parameterType="string"	resultMap="purchaseSelectMap">
		  SELECT t.tran_no, t.prod_no, t.buyer_id, t.payment_option, t.receiver_name, t.receiver_phone, t.demailaddr, t.dlvy_request, 
		t.tran_status_code, t.order_data, t.dlvy_date, p.prod_name, p.price
		 FROM transaction t, product p
		 WHERE t.prod_no = p.prod_no
		 AND t.prod_no = #{value} 
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	 	UPDATE transaction 
	 	<set>
	 		payment_option	= #{paymentOption:VARCHAR},
	 		receiver_name = #{receiverName:VARCHAR},
	 		receiver_phone = #{receiverPhone:VARCHAR},
			demailaddr = #{divyAddr:VARCHAR}, 
			dlvy_request = #{divyRequest:VARCHAR}
			<if test="divyDate != null" >, dlvy_date = TO_DATE(#{divyDate:DATE},'YYYY-MM-DD'))</if>
		</set>
		WHERE tran_no = #{tranNo}
	 </update>
	 
	 
	 <update	id="updateTranCode"	parameterType="purchase" >
		UPDATE transaction
		<set>
			tran_status_code = #{tranCode:CHAR}
		</set>
		WHERE prod_no = #{purchaseProd.prodNo}
	 </update>
		 
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getSaleList"  parameterType="search"	resultMap="purchaseSelectMap">
		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.*, t.tran_status_code 
						FROM product p, transaction t 
					<where>
						 p.prod_no=t.prod_no(+)
						<if test="onSale != null">
							<if test="onSale == 1">
							 	AND t.tran_status_code IS NULL 
							 </if>
							 <if test="onSale == 2">
							 	AND t.tran_status_code IS NOT NULL 
							 </if>
						</if>
						<if test="searchCondition != null and searchKeyword != null">
							<if test="searchCondition == 0 and searchKeyword !='' ">
						 		AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
						 		AND lower(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
						 		AND t.buyer_id LIKE '%'||#{searchKeyword}||'%'
							</if>
						</if>
						<if test="lowPrice != 0">
						 	AND p.price >= #{lowPrice}
						</if>
						<if test="highPrice != 0">
						 	AND p.price &lt;= #{highPrice}
						</if>
					</where>
					ORDER BY  
					<choose>
						<when test="ascendingCondition == 1">p.price, p.prod_no</when>
						<when test="ascendingCondition == 2">p.price DESC, p.prod_no</when>
						<when test="ascendingCondition == 3">lower(p.prod_name),  p.prod_no</when>
						<when test="ascendingCondition == 4">p.product_view DESC,  p.prod_no</when>
						<otherwise>p.prod_no</otherwise>
					</choose> ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 <select  id="getPurchaseList"  parameterType="map" 	resultMap="purchaseSelectMap">
	 	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(SELECT p.prod_name, t.tran_no, t.buyer_id, t.prod_no, t.receiver_name, t.tran_status_code 
	  								 FROM transaction t, product p
										<where>
											p.prod_no = t.prod_no AND
											t.buyer_id = #{buyerId} 
										</where>
										ORDER BY  
										<choose>
											<when test="ascendingCondition == 1">p.price, t.tran_no</when>
											<when test="ascendingCondition == 2">p.price DESC, t.tran_no</when>
											<when test="ascendingCondition == 3">lower(p.prod_name), t.tran_no</when>
											<when test="ascendingCondition == 4">p.product_view DESC, t.tran_no</when>
											<otherwise>p.prod_no</otherwise>
										</choose>) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
		
	<delete id="deletePurchase" parameterType="int">
	  	DELETE 
	  	FROM transaction 
	  	WHERE tran_no = #{value}
  	</delete>
  			
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	 	SELECT COUNT(*)
	  	FROM(	SELECT p.*, t.tran_status_code 
						FROM product p, transaction t 
					<where>
						 p.prod_no=t.prod_no(+)
						<if test="onSale != null">
							<if test="onSale == 1">
							 	AND t.tran_status_code IS NULL 
							 </if>
							 <if test="onSale == 2">
							 	AND t.tran_status_code IS NOT NULL 
							 </if>
						</if>
						<if test="searchCondition != null">
							<if test="searchCondition == 0 and searchKeyword !='' ">
						 		AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
						 		AND lower(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
						 		AND t.buyer_id = #{searchKeyword}
							</if>
						</if>
						<if test="lowPrice != 0">
						 	AND p.price >= #{lowPrice}
						</if>
						<if test="highPrice != 0">
						 	AND p.price &lt;= #{highPrice}
						</if>
					</where>
					ORDER BY  
					<choose>
						<when test="ascendingCondition == 1">p.price, p.prod_no</when>
						<when test="ascendingCondition == 2">p.price DESC, p.prod_no</when>
						<when test="ascendingCondition == 3">lower(p.prod_name),  p.prod_no</when>
						<when test="ascendingCondition == 4">p.product_view DESC,  p.prod_no</when>
						<otherwise>p.prod_no</otherwise>
					</choose> ) countTable				
	 </select>
	 
	 
</mapper>
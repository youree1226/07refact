<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"	column="prod_name" 		jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 				column="manufacture_day" 					jdbcType="VARCHAR" />
		<result property="price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="fileName" 			column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
		<result property="view" 			column="product_view" 				jdbcType="NUMERIC"  />
		<result property="proTranCode"	column="tran_status_code" 		jdbcType="CHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
		INSERT 
		INTO product (prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date, product_view)
		VALUES (seq_product_prod_no.nextval,
		 #{prodName:VARCHAR},
		 #{prodDetail:VARCHAR},
		 #{manuDate:VARCHAR},
		<if test="price == 0">price IS NULL</if>
		<if test="price != 0">#{price}</if>,
		 #{fileName:VARCHAR},
		 SYSDATE,
		 0)
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="findProduct"	parameterType="string"	resultMap="productSelectMap">
		 SELECT 
		 p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file, p.reg_date, p.product_view, t.tran_status_code
		 FROM product p, transaction t
		 WHERE p.prod_no = t.prod_no(+) AND p.prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	 	UPDATE product 
	   	<set>
	   		prod_name=#{prodName},
	   		prod_detail=#{prodDetail:VARCHAR},
	   		<if test="manuDate != null">manufacture_day=#{manuDate},</if>
	   		<if test="price != 0">price=#{price},</if>
	   		<if test="fileName != null">image_file=#{fileName} ,</if>
	   	</set>
	   	WHERE prod_no=#{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.*, t.tran_status_code 
						FROM product p, transaction t 
					<where>
						 p.prod_no=t.prod_no(+)
						<if test="onSale != null">
							<if test="onSale == 1">
							 	AND t.tran_status_code IS NULL 
							 </if>
							 <if test="onSale == 2">
							 	AND t.tran_status_code IS NOT NULL 
							 </if>
						</if>
						<if test="searchCondition != null and searchKeyword != null">
							<if test="searchCondition == 0 and searchKeyword !='' ">
						 		AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
						 		AND lower(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
						 		AND t.buyer_id LIKE '%'||#{searchKeyword}||'%'
							</if>
						</if>
						<if test="lowPrice != 0">
						 	AND p.price >= #{lowPrice}
						</if>
						<if test="highPrice != 0">
						 	AND p.price &lt;= #{highPrice}
						</if>
					</where>
					ORDER BY  
					<choose>
						<when test="ascendingCondition == 1">p.price, p.prod_no</when>
						<when test="ascendingCondition == 2">p.price DESC, p.prod_no</when>
						<when test="ascendingCondition == 3">lower(p.prod_name),  p.prod_no</when>
						<when test="ascendingCondition == 4">p.product_view DESC,  p.prod_no</when>
						<otherwise>p.prod_no</otherwise>
					</choose> ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	 	SELECT COUNT(*)
		  	FROM (	SELECT p.*, t.tran_status_code 
							FROM product p, transaction t 
						<where>
							 p.prod_no=t.prod_no(+)
							<if test="onSale != null">
								<if test="onSale == 1">
								 	AND t.tran_status_code IS NULL 
								 </if>
								 <if test="onSale == 2">
								 	AND t.tran_status_code IS NOT NULL 
								 </if>
							</if>
							<if test="searchCondition != null and searchKeyword != null">
								<if test="searchCondition == 0 and searchKeyword !='' ">
							 		AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
							 		AND lower(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
							 		AND t.buyer_id LIKE '%'||#{searchKeyword}||'%'
								</if>
							</if>
							<if test="lowPrice != 0">
							 	AND p.price >= #{lowPrice}
							</if>
							<if test="highPrice != 0">
							 	AND p.price &lt;= #{highPrice}
							</if>
						</where>
						ORDER BY  
						<choose>
							<when test="ascendingCondition == 1">p.price, p.prod_no</when>
							<when test="ascendingCondition == 2">p.price DESC, p.prod_no</when>
							<when test="ascendingCondition == 3">lower(p.prod_name),  p.prod_no</when>
							<when test="ascendingCondition == 4">p.product_view DESC,  p.prod_no</when>
							<otherwise>p.prod_no</otherwise>
						</choose>  ) countTable			
	 </select>
	 
	 
	  <update	id="updateViewProduct"	parameterType="product" >
	  	UPDATE product 
	   	<set>
	   		product_view= #{view} 
	   	</set>
	   WHERE prod_no=#{prodNo}
	 </update>
	 
</mapper>